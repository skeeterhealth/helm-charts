apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "contour.fullname" . }}
  labels:
    {{- include "contour.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.contour.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # This value of maxSurge means that during a rolling update
      # the new ReplicaSet will be created first.
      maxSurge: 50%
  selector:
    matchLabels:
      {{- include "contour.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        {{- include "contour.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "contour.selectorLabels" . | nindent 20 }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - serve
            - --incluster
            - --xds-address=0.0.0.0
            - --xds-port=8001
            - --envoy-service-http-port=80
            - --envoy-service-https-port=443
            - --contour-cafile=/ca/cacert.pem
            - --contour-cert-file=/certs/tls.crt
            - --contour-key-file=/certs/tls.key
            - --config-path=/config/contour.yaml
          command: ["contour"]
          image: "{{ .Values.contour.image.repository }}:{{ .Values.contour.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          name: contour
          ports:
            - containerPort: 8001
              name: xds
              protocol: TCP
            - containerPort: 8000
              name: debug
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
          readinessProbe:
            tcpSocket:
              port: 8001
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - name: contourcert
              mountPath: /certs
              readOnly: true
            - name: cacert
              mountPath: /ca
              readOnly: true
            - name: contour-config
              mountPath: /config
              readOnly: true
          env:
            - name: CONTOUR_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: POD_NAME
              value: {{ include "contour.fullname" . }}
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ include "contour.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      volumes:
        - name: contourcert
          secret:
            secretName: contourcert
        - name: cacert
          secret:
            secretName: cacert
        - name: contour-config
          configMap:
            name: contour
            defaultMode: 0644
            items:
              - key: contour.yaml
                path: contour.yaml
