apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "envoy.fullname" . }}
  labels:
    {{- include "envoy.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      {{- include "envoy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8002"
        prometheus.io/path: "/stats/prometheus"
      labels:
        {{- include "envoy.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - command:
            - /bin/contour
          args:
            - envoy
            - shutdown-manager
          image: "{{ .Values.contour.image.repository }}:{{ .Values.contour.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 8090
                scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8090
            initialDelaySeconds: 3
            periodSeconds: 10
          name: shutdown-manager
        - args:
            - -c
            - /config/envoy.json
            - --service-cluster {{ .Release.Namespace }}
            - --service-node {{ include "contour.fullname" . }}-envoy
            - --log-level info
          command:
            - envoy
          image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
          name: envoy
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              name: https
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 3
            periodSeconds: 4
          volumeMounts:
            - name: envoy-config
              mountPath: /config
            - name: envoycert
              mountPath: /certs
            - name: cacert
              mountPath: /ca
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 8090
                scheme: HTTP
      initContainers:
        - args:
            - bootstrap
            - /config/envoy.json
            - --xds-address=contour
            - --xds-port=8001
            - --envoy-cafile=/ca/cacert.pem
            - --envoy-cert-file=/certs/tls.crt
            - --envoy-key-file=/certs/tls.key
          command:
            - contour
          image: "{{ .Values.contour.image.repository }}:{{ .Values.contour.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.contour.image.pullPolicy }}
          name: envoy-initconfig
          volumeMounts:
            - name: envoy-config
              mountPath: /config
            - name: envoycert
              mountPath: /certs
              readOnly: true
            - name: cacert
              mountPath: /ca
              readOnly: true
          env:
            - name: CONTOUR_NAMESPACE
              value: {{ .Release.Namespace }}
      serviceAccountName: {{ include "contour.serviceAccountName" . }}
      terminationGracePeriodSeconds: 300
      restartPolicy: Always
      volumes:
        - name: envoy-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
        - name: cacert
          secret:
            secretName: cacert
